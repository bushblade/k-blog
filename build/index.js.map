{
  "version": 3,
  "sources": ["../app/components/ThreeScene.tsx", "../app/entry.server.tsx", "../app/root.tsx", "../app/Document.tsx", "../app/components/ThemeIcon.tsx", "../app/components/MoonSVG.tsx", "../app/components/SunSVG.tsx", "../app/DocumentForBoundry.tsx", "../app/components/ErrorPage.tsx", "../app/components/MainContent.tsx", "../app/components/StackedWave.tsx", "../app/components/Header.tsx", "../app/cookies.ts", "../app/routes/category.$category.tsx", "../app/graphql/graphcms.server.ts", "../app/components/HomeButton.tsx", "../app/components/CategoryIcon.tsx", "../app/components/NoPostsToShow.tsx", "../app/components/Footer.tsx", "../app/components/PostsGrid.tsx", "../app/utils.ts", "../app/components/Picture.tsx", "../app/routes/_index.tsx", "../app/components/Banner.tsx", "../app/components/CategoryLinks.tsx", "../app/routes/$post.tsx", "../app/components/RichTextRenderer.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/* eslint-disable react/no-unknown-property */\nimport { Environment, OrbitControls, useGLTF } from '@react-three/drei'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { Suspense, useRef, useState } from 'react'\nimport type { Mesh } from 'three'\n\nexport default function ThreeScene({\n  glbFileUrl,\n  bgColour,\n}: {\n  glbFileUrl: string\n  bgColour: string\n}) {\n  const [dragging, setDragging] = useState(false)\n  return (\n    <div\n      id='canvas-container'\n      className='hover:cursor-grab active:cursor-grabbing rounded-box bg-base-100'\n    >\n      <Canvas\n        style={{\n          width: '100%',\n          aspectRatio: '16/9',\n          backgroundColor: bgColour,\n        }}\n        onPointerDown={() => setDragging(true)}\n        onPointerUp={() => setDragging(false)}\n        className='rounded-box'\n      >\n        <Suspense fallback={null}>\n          <MyMesh glbFileUrl={glbFileUrl} dragging={dragging} />\n          <OrbitControls />\n          <Environment preset='sunset' background={false} />\n        </Suspense>\n      </Canvas>\n    </div>\n  )\n}\n\nfunction MyMesh({\n  glbFileUrl,\n  dragging,\n}: {\n  glbFileUrl: string\n  dragging: boolean\n}) {\n  const gltf = useGLTF(glbFileUrl)\n  const myMesh = useRef<Mesh>()\n  useFrame(() => {\n    if (myMesh.current && !dragging) myMesh.current.rotation.y += 0.01\n  })\n  return <primitive object={gltf.scene} scale={0.8} ref={myMesh} />\n}\n", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from 'node:stream'\n\nimport type { AppLoadContext, EntryContext } from '@remix-run/node'\nimport { createReadableStreamFromReadable } from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport isbot from 'isbot'\nimport { renderToPipeableStream } from 'react-dom/server'\n\nconst ABORT_DELAY = 5_000\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get('user-agent'))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true\n          const body = new PassThrough()\n          const stream = createReadableStreamFromReadable(body)\n\n          responseHeaders.set('Content-Type', 'text/html')\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          )\n\n          pipe(body)\n        },\n        onShellError(error: unknown) {\n          reject(error)\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error)\n          }\n        },\n      }\n    )\n\n    setTimeout(abort, ABORT_DELAY)\n  })\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true\n          const body = new PassThrough()\n          const stream = createReadableStreamFromReadable(body)\n\n          responseHeaders.set('Content-Type', 'text/html')\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          )\n\n          pipe(body)\n        },\n        onShellError(error: unknown) {\n          reject(error)\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error)\n          }\n        },\n      }\n    )\n\n    setTimeout(abort, ABORT_DELAY)\n  })\n}\n", "import {\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  LiveReload,\n  useRouteError,\n  isRouteErrorResponse } from\n'@remix-run/react';\n\nimport styles from './tailwind.css';\n\nimport Document from './Document';\nimport DocumentForBoundry from './DocumentForBoundry';\nimport ErrorPage from './components/ErrorPage';\n\nimport type {\n  ActionFunctionArgs,\n  LinksFunction,\n  LoaderFunction } from\n'@remix-run/node';\nimport { themeCookie } from './cookies';\nimport { json } from '@remix-run/node';\n\nexport const links: LinksFunction = () => {\n  return [\n  { rel: 'stylesheet', href: styles },\n  { rel: 'icon', href: '/girl-icon.svg', type: 'image/svg' }];\n\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const cookieHeader = request.headers.get('Cookie');\n  const cookie = (await themeCookie.parse(cookieHeader)) || {};\n  if (!cookie.theme) cookie.theme = 'dracula';\n  return cookie;\n};\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const cookieHeader = request.headers.get('Cookie');\n  const cookie = (await themeCookie.parse(cookieHeader)) || {};\n  const bodyParams = await request.formData();\n\n  if (bodyParams.get('theme')) {\n    cookie.theme = bodyParams.get('theme');\n  }\n\n  return json(null, {\n    headers: {\n      'Set-Cookie': await themeCookie.serialize(cookie)\n    }\n  });\n}\n\nexport default function App() {\n  return (\n    <Document>\n      <Outlet />\n      <ScrollRestoration />\n      <Scripts />\n      {process.env.NODE_ENV === 'development' && <LiveReload />}\n    </Document>);\n\n}\n\n// catch errors\nexport function ErrorBoundary() {\n  const error = useRouteError();\n  if (isRouteErrorResponse(error)) {\n    return (\n      <DocumentForBoundry title={`Oops! ${error.status}`}>\n        <ErrorPage message={`${error.status}  ${error.statusText}`}>\n          <p className='text-lg'>I don&apos;t have a page for that</p>\n        </ErrorPage>\n        <Scripts />\n      </DocumentForBoundry>);\n\n  } else if (error instanceof Error) {\n    return (\n      <DocumentForBoundry title='Oh no!'>\n        <ErrorPage message={error.message} />\n        <Scripts />\n      </DocumentForBoundry>);\n\n  } else {\n    return (\n      <DocumentForBoundry title='Oh no!'>\n        <ErrorPage message='Unknown Error!' />\n        <Scripts />\n      </DocumentForBoundry>);\n\n  }\n}", "import { useState } from 'react'\nimport { Links, Meta, useFetcher, useLoaderData } from '@remix-run/react'\nimport ThemeIcon from './components/ThemeIcon'\nimport MoonSVG from './components/MoonSVG'\nimport SunSVG from './components/SunSVG'\n\nconst themes = [\n  { name: 'garden', dark: false },\n  { name: 'dracula', dark: true },\n  { name: 'retro', dark: false },\n  { name: 'business', dark: true },\n  { name: 'lemonade', dark: false },\n]\n\nexport default function Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode\n  title?: string\n  isErrorPage?: boolean\n}) {\n  // this will be the return of the root loader function\n  const loaderData = useLoaderData()\n  const fetcher = useFetcher()\n\n  const [theme, setTheme] = useState(\n    loaderData?.theme\n      ? loaderData.theme\n      : window.matchMedia('(prefers-color-scheme: dark)').matches\n      ? 'dracula'\n      : 'garden'\n  )\n\n  return (\n    <html lang='en' data-theme={theme}>\n      <head>\n        <meta charSet='utf-8' />\n        <meta name='viewport' content='width=device-width,initial-scale=1' />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <div className='dropdown dropdown-end absolute top-8 right-8 z-20'>\n          <button\n            name='theme-picker'\n            tabIndex={0}\n            className='btn btn-ghost tooltip tooltip-left tooltip-primary normal-case font-normal'\n            data-tip='Change Theme'\n          >\n            <ThemeIcon />\n          </button>\n          <ul\n            tabIndex={0}\n            className='dropdown-content menu p-2 shadow bg-base-100 rounded-box w-52'\n          >\n            {themes.map((t) => (\n              <li key={t.name}>\n                <button\n                  name='set-theme'\n                  onClick={() => {\n                    setTheme(t.name)\n                    fetcher.submit({ theme: t.name }, { method: 'post' })\n                    // set theme for when loader data not available i.e. Error\n                    localStorage.setItem('theme', t.name)\n                    // localStorage.setItem('theme', t.name)\n                    if (document.activeElement instanceof HTMLElement) {\n                      // whatever element has focus when dropdown is open blur\n                      // it so it loses focus and the dropdown closes\n                      document.activeElement.blur()\n                    }\n                  }}\n                  className={\n                    t.name === theme ? 'bg-primary text-primary-content' : ''\n                  }\n                >\n                  {t.name[0].toUpperCase() + t.name.slice(1)}{' '}\n                  <span className='ml-auto'>\n                    {t.dark ? (\n                      <MoonSVG className='w-5' />\n                    ) : (\n                      <SunSVG className='w-5' />\n                    )}\n                  </span>\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        {children}\n      </body>\n    </html>\n  )\n}\n", "export default function ThemeIcon() {\n  return (\n    <svg\n      viewBox='0 0 72 72'\n      xmlns='http://www.w3.org/2000/svg'\n      height='50px'\n      width='50px'\n    >\n      <path\n        fill='#A57939'\n        d='M59 36c-.25-.75-.71-2.1-2-3-1.56-1.08-3.63-1.01-4-1-.76.03-1.18.16-2 0-.58-.12-1.53-.3-2-1-.4-.59-.15-1.08 0-3 .12-1.51.17-2.27 0-3-.37-1.58-1.49-2.56-2-3-1.05-.92-2.38-1.56-5-2-1.82-.31-4.75-.6-9 0-2.15.3-5.46.87-8 1.72-1.77.58-3.74 1.41-6 3-.02.01-.04.02-.05.03-3.44 2.24-5.39 6.2-5.22 10.31C14.64 57.13 54.56 59.91 59 41c.09-.6.79-2.65 0-5zm-20.79-5.88a2.76 2.76 0 0 1-2.76-2.76c0-1.53 1.23-2.76 2.76-2.76h2.71a2.76 2.76 0 1 1 0 5.52h-2.71z'\n      />\n      <circle cx={20} cy={33} r={3} fill='#61B2E4' />\n      <circle cx={25} cy={42} r={3} fill='#5C9E31' />\n      <circle cx={35} cy={45} r={3} fill='#FCEA2B' />\n      <circle cx={45} cy={44} r={3} fill='#D22F27' />\n      <g fill='none' stroke='#000' strokeMiterlimit={10} strokeWidth={2}>\n        <path\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          d='M59 36c-.25-.75-.71-2.1-2-3-1.56-1.08-3.63-1.01-4-1-.76.03-1.18.16-2 0-.58-.12-1.53-.3-2-1-.4-.59-.15-1.08 0-3 .12-1.51.17-2.27 0-3-.37-1.58-1.49-2.56-2-3-1.05-.92-2.38-1.56-5-2-1.82-.31-4.75-.6-9 0-2.15.3-5.46.87-8 1.72-1.77.58-3.74 1.41-6 3-.02.01-.04.02-.05.03-3.44 2.24-5.39 6.2-5.22 10.31C14.64 57.13 54.56 59.91 59 41c.09-.6.79-2.65 0-5zm-20.79-5.88a2.76 2.76 0 0 1-2.76-2.76c0-1.53 1.23-2.76 2.76-2.76h2.71a2.76 2.76 0 1 1 0 5.52h-2.71z'\n        />\n        <circle cx={20} cy={33} r={3} />\n        <circle\n          cx={25}\n          cy={42}\n          r={3}\n          strokeLinecap='round'\n          strokeLinejoin='round'\n        />\n        <circle cx={35} cy={45} r={3} />\n        <circle cx={45} cy={44} r={3} />\n      </g>\n    </svg>\n  )\n}\n", "export default function MoonSVG({ className }: { className?: string }) {\n  return (\n    <svg\n      viewBox='0 0 72 72'\n      xmlns='http://www.w3.org/2000/svg'\n      className={className}\n    >\n      <path\n        fill='#FCEA2B'\n        d='M7.363 42.41c4.553 6.17 11.874 10.172 20.13 10.172 13.808 0 25-11.193 25-25 0-8.523-4.264-16.05-10.776-20.562C54.756 9.858 64.5 21.463 64.5 35.352c0 16.016-12.984 29-29 29-13.588 0-24.99-9.33-28.136-21.943z'\n      />\n      <path\n        fill='#F1B31C'\n        d='M45.837 9.21c8.25 4.25 16.195 11.873 16.195 24.675 0 15.45-12.524 27.974-27.974 27.974-9.243 0-19.752-4.836-24.294-15.544 0 0 4.38 18.657 25.72 18.665 19.326.007 28.041-20.622 28.041-20.622C70.033 12.382 45.837 9.211 45.837 9.211z'\n      />\n      <path\n        fill='none'\n        stroke='#000'\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit={10}\n        strokeWidth={2}\n        d='M7.363 42.41c4.553 6.17 11.874 10.172 20.13 10.172 13.808 0 25-11.193 25-25 0-8.523-4.264-16.05-10.776-20.562C54.756 9.858 64.5 21.463 64.5 35.352c0 16.016-12.984 29-29 29-13.588 0-24.99-9.33-28.136-21.943z'\n      />\n    </svg>\n  )\n}\n", "export default function SunSVG({ className }: { className?: string }) {\n  return (\n    <svg\n      viewBox='0 0 72 72'\n      xmlns='http://www.w3.org/2000/svg'\n      className={className}\n    >\n      <path\n        fill='#FCEA2B'\n        d='m66 36-10.676 5.182 6.658 9.824-11.84-.864.864 11.84-9.825-6.658L36 66l-5.182-10.676-9.824 6.658.864-11.84-11.84.864 6.658-9.825L6 36l10.677-5.182-6.659-9.824 11.84.864-.864-11.84 9.825 6.658L36 6l5.182 10.677 9.824-6.659-.864 11.84 11.84-.864-6.658 9.825z'\n      />\n      <g\n        fill='none'\n        stroke='#000'\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeMiterlimit={10}\n        strokeWidth={2}\n      >\n        <circle cx={36} cy={35.95} r={19.828} />\n        <path d='m66 36-10.676 5.182 6.658 9.824-11.84-.864.864 11.84-9.825-6.658L36 66l-5.182-10.676-9.824 6.658.864-11.84-11.84.864 6.658-9.825L6 36l10.677-5.182-6.659-9.824 11.84.864-.864-11.84 9.825 6.658L36 6l5.182 10.677 9.824-6.659-.864 11.84 11.84-.864-6.658 9.825z' />\n      </g>\n    </svg>\n  )\n}\n", "import { useEffect, useState } from 'react'\nimport { Links, Meta } from '@remix-run/react'\n\nexport default function Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode\n  title?: string\n}) {\n  const [theme, setTheme] = useState('dracula')\n\n  useEffect(() => {\n    // Fallback for themeing if on an error page\n    const storedTheme = localStorage.getItem('theme')\n    console.log(storedTheme)\n    if (storedTheme) {\n      setTheme(storedTheme)\n    }\n  }, [])\n\n  return (\n    <html lang='en' data-theme={theme}>\n      <head>\n        <meta charSet='utf-8' />\n        <meta name='viewport' content='width=device-width,initial-scale=1' />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body>{children}</body>\n    </html>\n  )\n}\n", "import { Link } from '@remix-run/react'\nimport MainContent from './MainContent'\nimport Header from './Header'\n\nexport default function ErrorPage({\n  message,\n  children,\n}: {\n  message?: string\n  children?: React.ReactNode\n}) {\n  return (\n    <>\n      <Header>\n        <img src='/broken-heart.svg' alt='broken-heart' className='w-20 h-20' />{' '}\n        <h1 className='text-center text-4xl'>Oops! Something went wrong.</h1>\n      </Header>\n      <MainContent>\n        <div className='alert alert-warning shadow-xl flex flex-col my-8 py-8 max-w-xl m-auto'>\n          {message ? <h2 className='text-xl font-bold'>{message}</h2> : null}\n          {children ? children : null}\n          <Link to='/' className='btn shadow-xl'>\n            I want to go home\n          </Link>\n        </div>\n      </MainContent>\n    </>\n  )\n}\n", "/**\n * Wraps the main content of the site in a container\n */\nexport default function MainContent({\n  children,\n  narrow = false,\n}: {\n  children: React.ReactNode\n  narrow?: boolean\n}) {\n  return (\n    <div className='flex justify-center mb-20 min-h-[60vh]'>\n      <main\n        className={`container p-3 ${\n          narrow ? 'max-w-5xl' : 'md:max-w-screen-lg'\n        }`}\n      >\n        {children}\n      </main>\n    </div>\n  )\n}\n", "export default function StackedWave() {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={1920}\n      height={400}\n      preserveAspectRatio='none'\n      className='absolute overflow-hidden bottom-0 opacity-40'\n    >\n      <g mask='url(\"#a\")' fill='none'>\n        <path\n          d='M0 313C128 263.2 384 69 640 64s384 230.2 640 224c256-6.2 512-204 640-255v367H0z'\n          className='fill-base-200'\n        />\n        <path\n          d='M0 78c55 48.4 165 254 275 242S440 34.2 550 18C660 1.8 715 219.4 825 239c110 19.6 165-129.8 275-123 110 6.8 165 156 275 157s166-154.4 275-152c109 2.4 216 131.2 270 164v115H0z'\n          className='fill-base-300'\n        />\n        <path\n          d='M0 378c128-52.2 384-238.4 640-261 256-22.6 384 140.8 640 148 256 7.2 512-89.6 640-112v247H0z'\n          className='fill-secondary-focus'\n        />\n        <path\n          d='M0 89c96 50 288 248.4 480 250 192 1.6 288-219.2 480-242 192-22.8 288 124 480 128s384-86.4 480-108v283H0z'\n          className='fill-secondary'\n        />\n      </g>\n      <defs>\n        <mask id='a'>\n          <path d='M0 0h1920v400H0z' className='fill-base-100' />\n        </mask>\n      </defs>\n    </svg>\n  )\n}\n", "import StackedWave from './StackedWave'\nexport default function Header({ children }: { children: React.ReactNode }) {\n  return (\n    <header className='hero py-8 bg-gradient-to-tl from-base-300 to-base-200 relative min-h-[360px]'>\n      <StackedWave />\n      <div className='text-center hero-content flex content-center align-center'>\n        {children}\n      </div>\n    </header>\n  )\n}\n", "import { createCookie } from '@remix-run/node'\n\nexport const themeCookie = createCookie('theme', {\n  maxAge: 604_800, // one week\n})\n", "import { gql } from 'graphql-request'\nimport { useLoaderData } from '@remix-run/react'\nimport { graphcms } from '~/graphql/graphcms.server'\n\nimport HomeButton from '~/components/HomeButton'\nimport CategoryIcon from '~/components/CategoryIcon'\nimport MainContent from '~/components/MainContent'\nimport NoPostsToShow from '~/components/NoPostsToShow'\nimport Footer from '~/components/Footer'\nimport PostsGrid from '~/components/PostsGrid'\nimport Header from '~/components/Header'\n\nimport type { LoaderFunctionArgs, MetaFunction } from '@remix-run/node'\nimport type { PostWithSmallPreview } from '~/types'\nimport type { Author, Category } from '~/graphql/graphcmsTypes'\n\nconst query = gql`\n  query CategoryPageQuery($category: String!, $authorId: ID!) {\n    categories {\n      id\n      title\n      slug\n    }\n    author(where: { id: $authorId }) {\n      name\n      title\n      biography\n      picture {\n        url(\n          transformation: {\n            document: { output: { format: webp } }\n            image: { resize: { height: 120, width: 120, fit: clip } }\n          }\n        )\n      }\n    }\n    category(where: { slug: $category }) {\n      title\n    }\n    posts(where: { categories_some: { slug: $category } }) {\n      id\n      slug\n      title\n      createdAt\n      categories {\n        id\n        title\n        slug\n      }\n      content {\n        text\n      }\n      previewImage {\n        id\n        url(\n          transformation: {\n            document: { output: { format: webp } }\n            image: { resize: { fit: crop, height: 288, width: 512 } }\n          }\n        )\n        small: url(\n          transformation: {\n            document: { output: { format: webp } }\n            image: { resize: { fit: crop, height: 9, width: 16 } }\n          }\n        )\n        fileName\n      }\n    }\n  }\n`\n\ninterface Data {\n  author: Author\n  categories: Category[]\n  posts: PostWithSmallPreview[]\n  category: Category\n}\n\nexport async function loader({ params }: LoaderFunctionArgs) {\n  const data: Data = await graphcms.request(query, {\n    category: params.category,\n    authorId: process.env.AUTHOR_ID,\n  })\n  if (!data.category) {\n    throw new Error(`No matching category for \"${params.category}\"`)\n  }\n\n  return {\n    posts: data.posts,\n    category: data.category.title,\n    author: data.author,\n    categories: data.categories,\n  }\n}\n\nexport const meta: MetaFunction<typeof loader> = ({ data }) => {\n  if (data)\n    return [\n      {\n        title: `${data.author.name}'s ${data.category} posts`,\n        'og:title': `${data.author.name}'s ${data.category} posts`,\n      },\n    ]\n  throw new Error('No Data')\n}\n\nexport default function CategoryPage() {\n  let { posts, category, categories, author } = useLoaderData<typeof loader>()\n\n  return (\n    <>\n      <HomeButton />\n      <Header>\n        <CategoryIcon category={category} />\n        <h1 className='text-5xl inline-block'>{category}</h1>\n      </Header>\n      <MainContent>\n        <h2 className='text-4xl pt-5'>{category} Posts</h2>\n        <div className='divider'></div>\n        {posts.length > 0 ? (\n          <PostsGrid posts={posts} />\n        ) : (\n          <NoPostsToShow category={category} />\n        )}\n      </MainContent>\n      <Footer author={author} categories={categories} />\n    </>\n  )\n}\n", "import dotenv from 'dotenv'\nimport { GraphQLClient } from 'graphql-request'\n\ndotenv.config()\n\nexport const graphcms = new GraphQLClient(\n  `https://api-eu-west-2.graphcms.com/v2/${process.env.GRAPHCMS_PROJECT_ID}/master`\n)\n", "import { Link } from '@remix-run/react'\n\n/* function Arrow() {\n  return (\n    <svg\n      height='40px'\n      width='40px'\n      viewBox='0 0 24 24'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      className='stroke-current'\n    >\n      <line x1='19' y1='12' x2='5' y2='12'></line>\n      <polyline points='12 19 5 12 12 5'></polyline>\n    </svg>\n  )\n} */\n\nfunction HomeIcon() {\n  return (\n    <svg\n      id='home'\n      viewBox='0 0 72 72'\n      xmlns='http://www.w3.org/2000/svg'\n      height='40px'\n      width='40px'\n    >\n      <g id='color'>\n        <polygon\n          fill='#D0CFCE'\n          stroke='none'\n          points='17.1289,59.7384 16.0605,34.7399 16.0812,27.7956 36.1491,8.1103 55.9811,27.9203 55.9766,43.3584 55.0371,52.0185 54.9219,59.7384 41.7865,59.1623 41.8149,41.6273 30.2251,41.6273 30.149,59.1623'\n        />\n      </g>\n      <g id='hair' />\n      <g id='skin' />\n      <g id='skin-shadow' />\n      <g id='line'>\n        <path\n          fill='none'\n          stroke='#000000'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth='2'\n          d='M41.9901,59.9508H53.982c0.55,0,1-0.45,1-1v-24.938'\n        />\n        <path\n          fill='none'\n          stroke='#000000'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth='2'\n          d='M17.058,34.0128v24.938c0,0.55,0.45,1,1,1h12.1346'\n        />\n        <polyline\n          fill='none'\n          stroke='#000000'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth='2'\n          points='8.4925,35.5947 36.0155,7.9766 63.5958,35.3474'\n        />\n        <polyline\n          fill='none'\n          stroke='#000000'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeMiterlimit='10'\n          strokeWidth='2'\n          points='41.8149,59.9327 41.8149,41.6273 30.2251,41.6273 30.2251,59.9327'\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default function HomeButton() {\n  return (\n    <div\n      className='fixed top-4 left-4 z-30 tooltip tooltip-right tooltip-primary'\n      data-tip='Home'\n    >\n      <Link to='/'>\n        <button\n          className='btn btn-ghost hover:scale-105 transition-transform'\n          name='home'\n        >\n          <HomeIcon />\n        </button>\n      </Link>\n    </div>\n  )\n}\n", "const iconfile = {\n  minecraft: 'video-game',\n  blender: 'blender',\n  story: 'book-open',\n  animation: 'film-camera',\n  youtube: 'youtube',\n  coding: 'hacker-cat',\n}\n\ninterface FileName {\n  minecraft: 'pickaxe'\n  blender: 'blender-logo'\n  story: 'book-vol-2'\n  animation: 'film-camera'\n  youtube: 'youtube'\n  coding: 'hacker-cat'\n}\n\n// TODO: add icons to schema\n\nexport default function CategoryIcon({ category }: { category: string }) {\n  const file = category.toLowerCase() as keyof FileName\n  if (!iconfile[file]) {\n    return null\n  }\n  return (\n    <img src={`/${iconfile[file]}.svg`} alt='' className='h-24 inline-block' />\n  )\n}\n", "import { Link } from '@remix-run/react'\n\nexport default function NoPostsToShow({ category }: { category: string }) {\n  return (\n    <div className='alert alert-warning shadow-xl flex flex-col my-8 py-8 max-w-lg m-auto'>\n      <h2 className='text-center text-xl'>\n        <img src='/crying-cat.svg' alt='broken-heart' className='w-10 h-10' />{' '}\n        Oops!\n      </h2>\n      <p style={{ display: 'block' }}>\n        I haven&apos;t created any <strong>{category}</strong> posts as yet!\n      </p>\n      <p className='text-center'>Please try another category.</p>\n      <Link to='/' className='btn shadow-xl'>\n        Take Me Back\n      </Link>\n    </div>\n  )\n}\n", "import { Link } from '@remix-run/react'\nimport type { Author, Category } from '~/graphql/graphcmsTypes'\n\nexport default function Footer({\n  author,\n  categories,\n}: {\n  author: Author\n  categories: Category[]\n}) {\n  const year = new Date().getFullYear()\n  return (\n    <footer className='footer p-10 text-base-content bg-gradient-to-br from-base-300 to-base-100'>\n      <div className='w-full h-full'>\n        <Link to='/' className='avatar m-auto'>\n          <div className='w-20 rounded-full ring ring-primary'>\n            <img src={author.picture.url} alt={author.name} />\n          </div>\n        </Link>\n        <p className='text-center w-full'>\n          All content &copy; {author.name} {year}\n        </p>\n      </div>\n      <div>\n        <span className='footer-title'>Post Categories</span>\n        {categories.map((category) => (\n          <Link\n            to={`/category/${category.slug}`}\n            key={category.id}\n            className='link link-hover'\n          >\n            {category.title}\n          </Link>\n        ))}\n      </div>\n      <div></div>\n    </footer>\n  )\n}\n", "import { Link } from '@remix-run/react'\nimport { formatDate, lessThanNdaysOld, trimText } from '~/utils'\nimport Picture from '~/components/Picture'\nimport type { PostWithSmallPreview } from '~/types'\n// import type { PostWithSmallThumbnail } from '~/types'\n\nexport default function PostsGrid({\n  posts,\n}: {\n  posts: PostWithSmallPreview[]\n}) {\n  return (\n    <section className='grid justify-items-center gap-5 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 pt-5'>\n      {posts.map((post) => (\n        <div key={post.id} className='h-full relative group w-full'>\n          <div className='absolute bg-gradient-to-br from-primary via-accent to-primary -z-0 w-[calc(100%+8px)] h-[calc(100%+8px)] top-[-4px] left-[-4px] card opacity-0 group-hover:opacity-100 transition-opacity duration-500'></div>\n          <article className='card overflow-hidden bg-base-100 shadow-lg max-w-lg group relative z-10 h-full'>\n            <Link to={`/${post.slug}`}>\n              <div className='overflow-hidden group-hover:opacity-80 transition-opacity '>\n                <Picture\n                  largeSrc={post.previewImage.url}\n                  smallSrc={post.previewImage.small}\n                  alt={post.title}\n                  aspectRatio='16/9'\n                />\n              </div>\n            </Link>\n            <div className='card-body justify-between p-0'>\n              <Link to={`/${post.slug}`} className='p-6'>\n                <span>\n                  {formatDate(post.createdAt)}{' '}\n                  {lessThanNdaysOld(post.createdAt, 14) ? (\n                    <div className='badge badge-secondary -translate-y-3 -rotate-6 group-hover:animate-pulse'>\n                      NEW\n                    </div>\n                  ) : null}\n                </span>\n                <h2 className='card-title group-hover:link decoration-2 decoration-primary my-3'>\n                  {post.title}\n                </h2>\n                <p\n                  style={{ whiteSpace: 'pre-wrap' }}\n                  className='text-sm my-2 line-clamp-3'\n                >\n                  {trimText(post.content.text)}\n                </p>\n              </Link>\n              <div className='card-actions justify-end pb-6 pl-6 pr-6'>\n                {post.categories?.length > 0\n                  ? post.categories.map((category) => (\n                      <Link\n                        to={`/category/${category.slug}`}\n                        className='badge badge-outline hover:bg-info hover:text-info-content'\n                        key={category.id}\n                      >\n                        {category.title}\n                      </Link>\n                    ))\n                  : null}\n              </div>\n            </div>\n          </article>\n        </div>\n      ))}\n    </section>\n  )\n}\n", "export function getWebPsrc(src: string, width = 800) {\n  const id = src.split('/').reverse()[0]\n  return `https://media.graphassets.com/resize=fit:crop,width:${width}/output=format:webp/${id}`\n}\n\n/**\n * Trims a block of plain text to specified length removing line breaks and\n * surplus white space\n *\n * @param text - the text you want to trim to length\n * @param length -  the length of string to return default 13\n * @returns A string of plain text\n */\nexport function trimText(text: string, length: number = 20) {\n  const t = text\n    .replace(/[0-9]\\\\n|\\\\n|\\/\\/|\\n/gi, ' ')\n    .replace(/\\s+/g, ' ')\n    .split(' ')\n    .slice(0, length)\n    .join(' ')\n    .trim()\n  return t\n}\n\nconst dateFormatter = new Intl.DateTimeFormat('en-GB', { dateStyle: 'long' })\n\n/**\n * Takes a valid date string and formats it to en-GB\n * @example \"2022-01-08T14:49:15.586393+00:00\" becomes \"8th January 2022\"\n *\n * @param dateStr - must be a valid dateTime string that can be passed to the Date constructor\n * @returns - A UK formatted long date string\n */\n\nexport function formatDate(dateStr: string): string {\n  const formattedDate = dateFormatter.format(new Date(dateStr))\n  const [day, ...rest] = formattedDate.split(' ')\n  const lastNum = day[day.length - 1]\n  const suffix =\n    lastNum === '1'\n      ? 'st'\n      : lastNum === '2'\n      ? 'nd'\n      : lastNum === '3'\n      ? 'rd'\n      : 'th'\n  return [`${day}${suffix}`, ...rest].join(' ')\n}\n\nexport function lessThanNdaysOld(dateStr: string, n: number = 30): boolean {\n  const today = new Date().getTime()\n  const dateToCheck = new Date(dateStr).getTime()\n  const msBetweenDates = Math.abs(dateToCheck - today)\n  const daysBetween = msBetweenDates / (24 * 60 * 60 * 1000)\n  return daysBetween < n\n}\n\n/**\n * Nearest Normal Aspect Ratio\n * borrowed from https://github.com/sajjad-shirazy/nearest-normal-aspect-ratio/blob/master/index.js\n * By: Sajjad Shirazy <shirazy.sajjad@gmail.com>\n * This function returns the nearest aspect ratio of a width and height within a limited range of possible aspect ratios.\n * In other words, while 649x360 technically has an aspect ratio of 649:360, it\u2019s often useful to know that the nearest normal aspect ratio is actually 9:5 (648x360).\n * @param {float} width The width of the space.\n * @param {float} height The height of the space.\n * @param {integer} maxWidth: The maximum width in the nearest normal aspect ratio. Defaults to 16.\n * @param {integer} maxWidth: The maximum height in the nearest normal aspect ratio. Defaults to 16.\n */\nexport function nearestAspectRatio(\n  width: number,\n  height: number,\n  maxWidth: number = 16,\n  maxHeight: number = 16\n): string {\n  const needsRotation = width > height\n\n  if (needsRotation) {\n    const temp = width\n    width = height\n    height = temp\n  }\n\n  const absoluteRatio = width / height\n\n  let normalRatio = [1, 1]\n\n  let ratio = 1\n\n  for (let i = 1; i <= maxHeight; i++) {\n    for (let j = 1; j <= maxWidth; j++) {\n      let value = j / i\n      if (Math.abs(value - absoluteRatio) < Math.abs(ratio - absoluteRatio)) {\n        ratio = value\n        normalRatio = [j, i]\n      }\n    }\n  }\n  return (needsRotation ? normalRatio.reverse() : normalRatio).join('/')\n}\n", "import { useState, useEffect } from 'react'\nimport type { AspectRatio } from '~/types'\n\ntype UseProgressiveImgReturn = [string, { blur: boolean }]\n\nconst useProgressiveImg = (\n  lowQualitySrc: string,\n  highQualitySrc: string\n): UseProgressiveImgReturn => {\n  const [src, setSrc] = useState(lowQualitySrc)\n\n  useEffect(() => {\n    if (src === lowQualitySrc) {\n      const img = new Image()\n      img.onload = () => {\n        if (img.complete) setSrc(highQualitySrc)\n      }\n      img.src = highQualitySrc\n    }\n  }, [lowQualitySrc, highQualitySrc, src])\n  return [src, { blur: src === lowQualitySrc }]\n}\n\ninterface PictureProps {\n  blurUp?: boolean\n  smallSrc: string\n  largeSrc: string\n  alt: string | undefined\n  className?: string\n  aspectRatio: AspectRatio\n}\n\n/**\n * Progressively load an image with blur up effect\n *\n * @param props.blurUp - should the image use a css filter to blur while loading\n * defaults to true. If you're noticing performance issues then disabling blurUp\n * may help.\n * @param props.smallSrc - the start image src should be a tiny image i.e. 16px by 9px\n * @param props.largSrc - the final image to transition to\n * @param props.alt - the alt attribute to pass to the '<img>'\n * @param props.className - any classes you want to apply to the image\n * @param props.aspectRatio - the desired aspect ratio of the image\n *\n */\n\nexport default function Picture({\n  blurUp = true,\n  smallSrc,\n  largeSrc,\n  alt,\n  className,\n  aspectRatio = '16/9',\n}: PictureProps) {\n  const [src, { blur }] = useProgressiveImg(smallSrc, largeSrc)\n\n  let aspectWidth: number\n  let aspectHeight: number\n\n  if (typeof aspectRatio === 'string') {\n    const ratios = aspectRatio.split('/').map((str) => parseInt(str))\n    aspectWidth = ratios[0]\n    aspectHeight = ratios[1]\n  } else {\n    aspectWidth = aspectRatio.width\n    aspectHeight = aspectRatio.height\n  }\n\n  return (\n    <figure\n      style={{\n        aspectRatio: `${aspectWidth}/${aspectHeight}`,\n        maxHeight: '80vh',\n        margin: 'auto',\n      }}\n      className={blur && blurUp ? 'animate-pulse' : ''}\n    >\n      <img\n        loading='lazy'\n        onContextMenu={(event) => event.preventDefault()}\n        src={src}\n        style={{\n          transform: 'translateZ(0)',\n          backfaceVisibility: 'hidden',\n          width: '100%',\n          filter: blur && blurUp ? 'blur(10px)' : 'none',\n          transition: blur && blurUp ? 'none' : 'filter 0.2s ease-out',\n          objectFit: 'cover',\n          overflow: 'hidden',\n        }}\n        alt={blur ? '' : alt}\n        className={className}\n      />\n    </figure>\n  )\n}\n", "import { useLoaderData } from '@remix-run/react'\nimport { gql } from 'graphql-request'\nimport { graphcms } from '~/graphql/graphcms.server'\n\nimport Banner from '~/components/Banner'\nimport MainContent from '~/components/MainContent'\nimport CategoryLinks from '~/components/CategoryLinks'\nimport Footer from '~/components/Footer'\nimport PostsGrid from '~/components/PostsGrid'\n\nimport type { Author, Category } from '~/graphql/graphcmsTypes'\nimport type { PostWithSmallPreview } from '~/types'\nimport type { MetaFunction } from '@remix-run/node'\n// import type { PostWithSmallThumbnail } from '~/types'\n\nconst query = gql`\n  query HomePageQuery($authorId: ID!) {\n    categories {\n      id\n      title\n      slug\n    }\n    author(where: { id: $authorId }) {\n      name\n      title\n      biography\n      picture {\n        url(\n          transformation: {\n            document: { output: { format: webp } }\n            image: { resize: { height: 120, width: 120, fit: clip } }\n          }\n        )\n      }\n    }\n    posts(orderBy: createdAt_DESC) {\n      id\n      title\n      slug\n      createdAt\n      categories {\n        id\n        title\n        slug\n      }\n      content {\n        text\n      }\n      previewImage {\n        fileName\n        url(\n          transformation: {\n            document: { output: { format: webp } }\n            image: { resize: { fit: crop, height: 288, width: 512 } }\n          }\n        )\n        small: url(\n          transformation: {\n            document: { output: { format: webp } }\n            image: { resize: { fit: crop, height: 9, width: 16 } }\n          }\n        )\n      }\n    }\n  }\n`\n\ninterface Data {\n  categories: Category[]\n  posts: PostWithSmallPreview[]\n  author: Author\n}\n\nexport async function loader() {\n  const data: Data = await graphcms.request(query, {\n    authorId: process.env.AUTHOR_ID,\n  })\n  if (data) {\n    return data\n  }\n  throw new Error('Something went wrong with fetching from CMS')\n}\n\nexport const meta: MetaFunction<typeof loader> = ({ data }) => {\n  if (data && data.author)\n    return [\n      {\n        title: `${data.author.name}'s blog site`,\n        'og:title': `${data.author.name}'s blog site`,\n        'og:image': data.author.picture.url,\n        'og:description': data.author.title,\n      },\n    ]\n  throw new Error('No Data')\n}\n\nexport default function Index() {\n  // NOTE: Remix not correctl geting type from loader so need assertion\n  const { categories, author, posts } = useLoaderData()\n  return (\n    <>\n      <Banner author={author} />\n      <MainContent>\n        <h2 className='text-4xl pt-5'>Posts</h2>\n        <div className='divider'></div>\n\n        <CategoryLinks categories={categories} />\n\n        <PostsGrid posts={posts} />\n      </MainContent>\n      <Footer author={author} categories={categories} />\n    </>\n  )\n}\n", "import { useState } from 'react'\nimport type { Author } from '~/graphql/graphcmsTypes'\nimport Header from './Header'\n\nconst greetings = ['Hey there!', 'Hi!', `Yep that's me!`, 'Hello!', '...']\n\nfunction randomGreeting() {\n  return greetings[Math.floor(Math.random() * greetings.length)]\n}\n\nexport default function Banner({ author }: { author: Author }) {\n  const [greeting, setGreeting] = useState(greetings[0])\n  return (\n    <Header>\n      <div className='max-w-md'>\n        <div\n          className='avatar tooltip tooltip-left tooltip-primary'\n          data-tip={greeting}\n          onMouseLeave={() => {\n            const timeoutId = setTimeout(() => {\n              setGreeting(randomGreeting())\n              clearTimeout(timeoutId)\n            }, 300)\n          }}\n        >\n          <div className='w-28 rounded-full ring ring-primary'>\n            <img src={author.picture?.url} alt={author.name} />\n          </div>\n        </div>\n        <h1 className='text-5xl'>Hi I&apos;m {author.name}</h1>\n        <p className='pt-6 font-bold'>A {author.title}</p>\n        <p className='pb-6'>{author.biography}</p>\n      </div>\n    </Header>\n  )\n}\n", "import { Link } from '@remix-run/react'\nimport type { Category } from '~/graphql/graphcmsTypes'\n\nexport default function CategoryLinks({\n  categories,\n}: {\n  categories: Category[]\n}) {\n  return (\n    <ul className='flex flex-wrap'>\n      {categories.map(({ id, title, slug }) => (\n        <li key={id}>\n          <Link key={id} to={`category/${slug}`}>\n            <button className='btn btn-ghost' name={slug}>\n              {title}\n            </button>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  )\n}\n", "import { gql } from 'graphql-request';\nimport { useLoaderData } from '@remix-run/react';\nimport { graphcms } from '~/graphql/graphcms.server';\n\nimport postStyles from '~/styles/postpage.css';\n\nimport MainContent from '~/components/MainContent';\nimport HomeButton from '~/components/HomeButton';\nimport Header from '~/components/Header';\nimport Picture from '~/components/Picture';\nimport Footer from '~/components/Footer';\n\nimport { nearestAspectRatio, trimText } from '~/utils';\n\nimport type {\n  MetaFunction,\n  LinksFunction,\n  LoaderFunctionArgs } from\n'@remix-run/node';\nimport type { Author, Category } from '~/graphql/graphcmsTypes';\nimport type { AspectRatio, PostWithSmallCoverImage } from '~/types';\nimport { RichTextRenderer } from '~/components/RichTextRenderer';\n\nconst pageQuery = gql`\n  query PostPageQuery($slug: String!, $authorId: ID!) {\n    categories {\n      id\n      title\n      slug\n    }\n    author(where: { id: $authorId }) {\n      name\n      title\n      biography\n      picture {\n        url(\n          transformation: {\n            document: { output: { format: webp } }\n            image: { resize: { height: 120, width: 120, fit: clip } }\n          }\n        )\n      }\n    }\n    post(where: { slug: $slug }) {\n      id\n      categories {\n        id\n        slug\n        title\n      }\n      coverImage {\n        fileName\n        height\n        width\n        url(\n          transformation: {\n            document: { output: { format: webp } }\n            image: { resize: { fit: clip, width: 1000 } }\n            validateOptions: true\n          }\n        )\n        small: url(\n          transformation: {\n            document: { output: { format: webp } }\n            image: { resize: { fit: clip, width: 16 } }\n            validateOptions: true\n          }\n        )\n      }\n      previewImage {\n        fileName\n        url(\n          transformation: {\n            document: { output: { format: webp } }\n            image: { resize: { fit: crop, width: 200 } }\n          }\n        )\n      }\n      title\n      publishedAt\n      content {\n        text\n        json\n        references {\n          ... on Video {\n            id\n            youTubeShareUrl\n          }\n          ... on BlenderModel {\n            backgroundColour {\n              css\n            }\n            id\n            title\n            glbFile {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface Data {\n  post: PostWithSmallCoverImage;\n  author: Author;\n  categories: Category[];\n}\n\nexport async function loader({ params }: LoaderFunctionArgs) {\n  const data: Data = await graphcms.request(pageQuery, {\n    slug: params.post,\n    authorId: process.env.AUTHOR_ID\n  });\n  if (data) return data;\n  throw new Error(`No posts found for \"${params.post}\"`);\n}\n\nexport const links: LinksFunction = () => {\n  return [\n  {\n    rel: 'stylesheet',\n    href: postStyles\n  }];\n\n};\n\n// NOTE: the meta function gets the loader data available in function args\nexport const meta: MetaFunction<typeof loader> = ({ data }) => {\n  if (data && data.post) {\n    return [\n    {\n      title: data.post.title,\n      'og:title': data.post.title,\n      'og:image': data.post.previewImage.url,\n      'og:description': trimText(data.post.content.text)\n    }];\n\n  }\n  throw new Error('No Data');\n};\n\nexport default function PostPage() {\n  const { post, author, categories } = useLoaderData<typeof loader>();\n\n  let coverImageAspectRatio: AspectRatio | null = null;\n  if (post.coverImage) {\n    coverImageAspectRatio =\n    post.coverImage.width && post.coverImage.height ?\n    nearestAspectRatio(post.coverImage.width, post.coverImage.height) :\n    '16/9';\n  }\n\n  return (\n    <>\n      <HomeButton />\n      <Header>\n        <h1 className='text-5xl inline-block'>{post.title}</h1>\n      </Header>\n      <div className='border-0 border-transparent m-auto max-w-[1000px] overflow-hidden lg:rounded-box -translate-y-20 bg-base-300 shadow-base-300 shadow-xl'>\n        {post.coverImage && coverImageAspectRatio ?\n        <Picture\n          smallSrc={post.coverImage.small}\n          largeSrc={post.coverImage.url}\n          alt={post.coverImage.fileName}\n          aspectRatio={coverImageAspectRatio} /> :\n\n        null}\n      </div>\n      <MainContent narrow={true}>\n        <RichTextRenderer content={post.content} />\n      </MainContent>\n      <Footer author={author} categories={categories} />\n    </>);\n\n}", "import { RichText } from '@graphcms/rich-text-react-renderer';\n\nimport { ClientOnly } from 'remix-utils/client-only';\nimport * as React from 'react';\nimport Picture from '~/components/Picture';\n\nimport { nearestAspectRatio } from '~/utils';\n\nimport type { EmbedProps } from '@graphcms/rich-text-types';\nimport type {\n  BlenderModel,\n  PostContentRichText,\n  Video } from\n'~/graphql/graphcmsTypes';\n\nconst ThreeScene = React.lazy(() => import('~/components/ThreeScene'));\n\nexport function RichTextRenderer({\n  content\n\n\n}: {content: PostContentRichText;}) {\n  return (\n    <RichText\n      content={content.json}\n      references={content.references}\n      renderers={{\n        h1: ({ children }) =>\n        <h1 className='text-5xl py-2 font-bold'>{children}</h1>,\n\n        h2: ({ children }) =>\n        <h2 className='text-4xl py-2 font-bold'>{children}</h2>,\n\n        h3: ({ children }) =>\n        <h3 className='text-3xl py-2 font-bold'>{children}</h3>,\n\n        p: ({ children }) => <p className='py-2'>{children}</p>,\n        ol: ({ children }) =>\n        <ol className='list-decimal list-inside'>{children}</ol>,\n\n        ul: ({ children }) =>\n        <ul className='list-disc list-inside'>{children}</ul>,\n\n        blockquote: ({ children }) =>\n        <blockquote className='border-l-4 border-info px-2 py-3 my-3 text-info-content bg-info rounded-box bg-opacity-20 border-opacity-20'>\n            {children}\n          </blockquote>,\n\n        code_block: ({ children }) => {\n          return (\n            <div className='mockup-code rounded-box font-mono'>\n              <pre className='no-before pl-5'>{children}</pre>\n            </div>);\n\n        },\n        a: ({ children, openInNewTab, title, ...rest }) =>\n        <a\n          target={openInNewTab ? '_blank' : '_self'}\n          {...rest}\n          className={`link link-hover link-primary font-bold ${\n          title ? 'tooltip tooltip-primary' : null\n          }`}\n          data-tip={title}>\n\n            {children}\n          </a>,\n\n        img: ({ title, altText, handle, width, height }) =>\n        <div style={{ maxWidth: '800px' }} className='mx-auto my-3'>\n            {width && height ?\n          <Picture\n          // NOTE: seems I can use image.handle to get image id\n          smallSrc={`https://media.graphassets.com/resize=fit:crop,width:16/output=format:webp/${handle}`}\n          largeSrc={`https://media.graphassets.com/resize=fit:crop,${\n          width > height ? 'width:800' : 'height:800'\n          }/output=format:webp/${handle}`}\n          alt={altText || title}\n          className='m-auto rounded-box max-w-full shadow-xl shadow-base-300'\n          aspectRatio={nearestAspectRatio(width, height)} /> :\n\n\n          <img\n            src={`https://media.graphassets.com/resize=fit:crop,width:800/output=format:webp/${handle}`}\n            alt={altText || title} />}\n\n\n          </div>,\n\n        embed: {\n          Video: ({ nodeId }: EmbedProps<Video>) => {\n            const video = content.references.find((ref) => ref.id === nodeId);\n            if (!video)\n            return (\n              <div className='alert alert-error shadow-xl'>\n                  <p>There should be a video here but something went wrong!</p>\n                </div>);\n\n            const foundVideo = (video as Video);\n            const videoId = foundVideo.youTubeShareUrl.split('/').reverse()[0];\n            return (\n              <div className='max-w-[800px] mx-auto my-3'>\n                <div className='w-full aspect-video'>\n                  <iframe\n                    loading='lazy'\n                    src={`https://www.youtube.com/embed/${videoId}`}\n                    title='YouTube video player'\n                    frameBorder='0'\n                    allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n                    allowFullScreen\n                    className='m-auto rounded-box w-full h-full'>\n                  </iframe>\n                </div>\n              </div>);\n\n          },\n          BlenderModel: ({ nodeId }: EmbedProps<BlenderModel>) => {\n            const bModel = content.references.find((ref) => ref.id === nodeId);\n            const { glbFile, backgroundColour, title } = (bModel as BlenderModel);\n            return (\n              <ClientOnly\n                fallback={\n                <div\n                  className='animate-pulse'\n                  style={{\n                    backgroundColor: backgroundColour.css,\n                    width: '100%',\n                    aspectRatio: '16/9'\n                  }}>\n\n                    <div className='text-center h-full w-full flex items-center justify-center'>\n                      <h3 className='text-lg h-12'>Loading {title}...</h3>\n                    </div>\n                  </div>}>\n\n\n                {() =>\n                <ThreeScene\n                  glbFileUrl={glbFile.url}\n                  bgColour={backgroundColour.css} />}\n\n\n              </ClientOnly>);\n\n          }\n        }\n      }} />);\n\n\n}", "export default {'entry':{'module':'/build/entry.client-OJMGUJQJ.js','imports':['/build/_shared/chunk-BA6NHEY4.js','/build/_shared/chunk-H5ZE7JVG.js','/build/_shared/chunk-EH6U3DQH.js','/build/_shared/chunk-NRH5LTJ7.js','/build/_shared/chunk-O4OKU2LD.js','/build/_shared/chunk-K4BO3OBJ.js','/build/_shared/chunk-K6PKGSTD.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-ZWMORCEF.js','imports':['/build/_shared/chunk-YVLWG3O5.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':true},'routes/$post':{'id':'routes/$post','parentId':'root','path':':post','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$post-J3SHVAD6.js','imports':['/build/_shared/chunk-I6QSU6FF.js','/build/_shared/chunk-E77M6JUI.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-Y37B6L5A.js','imports':['/build/_shared/chunk-YDG3AJFQ.js','/build/_shared/chunk-E77M6JUI.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/category.$category':{'id':'routes/category.$category','parentId':'root','path':'category/:category','index':undefined,'caseSensitive':undefined,'module':'/build/routes/category.$category-PYVKEAVD.js','imports':['/build/_shared/chunk-YDG3AJFQ.js','/build/_shared/chunk-I6QSU6FF.js','/build/_shared/chunk-E77M6JUI.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false}},'version':'13e6a956','hmr':{'runtime':'/build/_shared/chunk-K4BO3OBJ.js','timestamp':1695465850106},'url':'/build/manifest-13E6A956.js'};", "\nimport * as entryServer from \"/home/will/Dropbox/Remix/Koyah-Blog/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/category.$category.tsx\";\nimport * as route2 from \"./routes/_index.tsx\";\nimport * as route3 from \"./routes/$post.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/category.$category\": {\n      id: \"routes/category.$category\",\n      parentId: \"root\",\n      path: \"category/:category\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/$post\": {\n      id: \"routes/$post\",\n      parentId: \"root\",\n      path: \":post\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": "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",
  "names": ["useState", "jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "useState", "Links", "Meta", "jsxDEV", "Document", "jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "Document", "loader", "useLoaderData", "Link", "jsxDEV", "jsxDEV", "Link", "jsxDEV", "Link", "jsxDEV", "Link", "useState", "useEffect", "jsxDEV", "jsxDEV", "Link", "Fragment", "jsxDEV", "loader", "useLoaderData", "loader", "meta", "useLoaderData", "gql", "useState", "jsxDEV", "useState", "Link", "jsxDEV", "Fragment", "jsxDEV", "query", "gql", "loader", "meta", "useLoaderData", "links", "loader", "meta", "gql", "useLoaderData", "jsxDEV", "ThreeScene", "Fragment", "jsxDEV", "gql", "loader", "links", "meta", "useLoaderData"]
}
